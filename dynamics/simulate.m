function varargout = simulate(model, A, y0s, Tmax, varargin)
%   Y = simulate(@model,A,y0s,Tmax)
%       returns a cell array, Y, of matrices, each a N-by-T matrix
%       representing a cascade generated by the function handle, model
%
%   [Y, i_y0s] = simulate(model,A,y0s,Tmax,p_y0s,K)
%       returns a cell array, Y, and a vector of length K, i_y0s, that is
%       the index of y0s drawn randomly from probability distribution p_y0s

% inputs
if nargin < 5
    K = length(y0s);
    i_y0s = 1:K;
else
    % draw from p_y0s
    p_y0s = varargin{1};
    K = varargin{2};
    i_y0s = arrayfun(@(x) find(x<cumsum(p_y0s),1), rand(1,K));
end
% simulate
Y = cell(1,K);
for k = 1 : K
    Y{k} = zeros(size(A,1), Tmax);
    Y{k}(:,1) = y0s{i_y0s(k)};
    for t = 2 : Tmax
        Y{k}(:,t) = feval(model,A,Y{k}(:,t-1));
        if sum(Y{k}(:,t)) == 0; break; end
    end
    Y{k} = Y{k}(:,1:t);
end
% output
varargout{1} = Y;
if nargin > 4
    varargout{2} = i_y0s;
end